<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            color: #333;
            transition: background-color 0.3s, color 0.3s;
            font-family: 'Roboto', sans-serif;
        }
        .container {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            max-width: 400px;
            transition: background-color 0.3s, color 0.3s;
        }
        h1 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #1976d2;
            font-weight: 300;
        }
        #status {
            margin-top: 20px;
            font-weight: 400;
            color: #4caf50;
        }
        .dark-mode {
            background-color: #121212;
            color: #e0e0e0;
        }
        .dark-mode .container {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }
        .dark-mode input, .dark-mode select {
            color: #e0e0e0;
            background-color: #2c2c2c;
        }
        .dark-mode label {
            color: #b0b0b0;
        }
        .dark-mode h1 {
            color: #64b5f6;
        }
        .dark-mode #status {
            color: #81c784;
        }
        #darkModeToggle {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: #1976d2;
        }
        .dark-mode #darkModeToggle {
            background-color: #64b5f6;
        }
        .btn {
            background-color: #1976d2;
        }
        .dark-mode .btn {
            background-color: #64b5f6;
            color: #121212;
        }
        #modeIcon {
            font-size: 24px;
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <button id="darkModeToggle" class="btn-floating btn-large waves-effect waves-light">
        <i id="modeIcon" class="material-icons">nightlight_round</i>
    </button>
    <div class="container">
        <h1 class="center-align">Login</h1>
        <div class="row">
            <div class="input-field col s12">
                <input id="email" type="email" class="validate" required>
                <label for="email">E-mail</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <input id="password" type="password" class="validate" required>
                <label for="password">Senha</label>
            </div>
        </div>
        <button class="btn waves-effect waves-light" onclick="login()">Entrar
            <i class="material-icons right">send</i>
        </button>
        <div id="status" class="center-align"></div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const darkModeToggle = document.getElementById('darkModeToggle');
            darkModeToggle.addEventListener('click', toggleDarkMode);
        });

        function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
            const isDarkMode = document.body.classList.contains('dark-mode');
            localStorage.setItem('darkMode', isDarkMode);
            updateModeIcon(isDarkMode);
        }

        function updateModeIcon(isDarkMode) {
            const modeIcon = document.getElementById('modeIcon');
            modeIcon.textContent = isDarkMode ? 'wb_sunny' : 'nightlight_round';
        }

        // Check for saved dark mode preference
        const savedDarkMode = localStorage.getItem('darkMode');
        if (savedDarkMode === 'true') {
            document.body.classList.add('dark-mode');
            updateModeIcon(true);
        }

        function login() {
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const status = document.getElementById('status');

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                M.toast({html: 'Por favor, insira um endereço de e-mail válido', classes: 'red rounded', displayLength: 3000});
                return;
            }

            if (email && password) {

                const body = {
                    email,
                    password
                }

                fetch('http://localhost:3000/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(response => {

                    switch (response.status) {
                        case 200:
                            response.json().then(data => {
                                localStorage.setItem('token', data.token);
                                window.location.href = '/dashboard';
                            });
                            break;
                        default:
                            response.json().then(data => {
                                status.textContent = data.message;
                                M.toast({html: data.message, classes: 'rounded red'});
                            });
                            break;
                    }
                }).catch(error => {
                    console.log(error);
                });
            } else {
                status.textContent = 'Por favor, preencha todos os campos.';
                M.toast({html: 'Por favor, preencha todos os campos.', classes: 'rounded red'});
            }
        }
    </script>
</body>
</html>
